def fibonacci_series(n):
    # Generate a Fibonacci series up to n terms.
    if n <= 0:
        return []
    elif n == 1:
        return [0]
    
    fib_series = [0, 1]
    for _ in range(2, n):
        fib_series.append(fib_series[-1] + fib_series[-2])
    return fib_series

def is_palindrome(number):
    # Check if a given number is a palindrome.
    return str(number) == str(number)[::-1]

# Get valid integer input for Fibonacci series
while True:
    try:
        num_terms = int(input("Enter the number of terms for Fibonacci series: "))
        if num_terms < 0:
            raise ValueError("Number of terms must be a non-negative integer.")
        break
    except ValueError as e:
        print(f"Invalid input: {e}. Please enter a valid non-negative integer.")

# Generate and display the Fibonacci series
fib_series = fibonacci_series(num_terms)
print("Fibonacci Series:", fib_series)

# Get valid integer input for palindrome check
while True:
    try:
        num_to_check = int(input("Enter a number to check if it is a palindrome: "))
        break
    except ValueError:
        print("Invalid input. Please enter a valid integer.")

# Check and display palindrome result
if is_palindrome(num_to_check):
    print(f"{num_to_check} is a palindrome number.")
else:
    print(f"{num_to_check} is not a palindrome number.")
